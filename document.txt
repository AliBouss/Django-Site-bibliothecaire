Site de gestion de livre d'une biblioth√©que

from django.db import models

class Author(models.Model):

    firsname = models.CharField(max_lenght=100, blank=False)

    lastname = models.CharField(max_lenght=100, blank=False)

    wikipedia = models.URLField(blank=True)

def __str__(self):

    return self.firstname, self.lastname

class Book(models.Model):

    title = models.CharField(max_length=100)

    price = models.FloatField(default=True)

    summary = models.TextField()

    author = models.ForeignKeys(author, on_delete=models.CASCADE)

    categoryChoice = models.TextChoices("Aventure", "Thriller", "Fantastique", "Romance",                        

                                                                "Horreur")

    category = models.CharField(blank=True, choices  = categoryChoice, max_lenght=200)

    stock = models.IntegerField(default=0, blank=True)

def __str__(self):

    return self.title

-------------------------------------------------------------------------------------
class Book(models.Model):
    AVENTURE = 'AV'
    THRILLER = 'TR'
    FANTASTIQUE = 'FT'
    ROMANCE = 'RM'
    HORREUR = 'HR'
    SCIENCE_FICTION = 'SF'

    CATEGORY_CHOICES = [
        (AVENTURE, 'Aventure'),
        (THRILLER, 'Thriller'),
        (FANTASTIQUE, 'Fantastique'),
        (ROMANCE, 'Romance'),
        (HORREUR, 'Horreur'),
        (SCIENCE_FICTION, 'Science-fiction')
    ]

    title = models.CharField(max_length=100)
    price = models.DecimalField(blank=True,max_digits=10000000, decimal_places=2)
    summary = models.TextField(blank=True)
    author = models.ForeignKey('Author', on_delete=models.CASCADE, blank=True)
    category = models.CharField(max_length=2, choices=CATEGORY_CHOICES, blank=True, default=AVENTURE)
    stock = models.DecimalField(default=0, blank=True, max_digits=1000000, decimal_places=0)

    def __str__(self):
        return f"{this.title}"


class Author(models.Model):
    firstname = models.CharField(max_length=100)
    lastname = models.CharField(max_length=100)
    wikipedia = models.URLField(blank=True)

    def __str__(self):
        return f"{this.firsname} {this.lastname}"

    

